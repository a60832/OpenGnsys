#!/bin/bash
#_______________________________________________________________________________________________________________________________
#
# PARAMETROS RECIBIDOS DESDE EL CLIENTE:
# $1 disco
# $2 par=N�mero de particion
# $3 Nombre can�nico de la imagen
# $4 Direcci�n IP del repositorio
# $5 Protocolo  UNICAST  MULTICAST  TORRENT
# $6 Opciones del protocolo
#_______________________________________________________________________________________________________________________________

#Descripcion:
# La interfaz detecta:
#    Si Repositorio es el global (REPO) realiza un deploy.
#    Si Repositorio es local (CACHE) realiza un ogRestoreImage CACHE
# El deploy, si detecta que el cliente no tiene una cache con espacio suficiente reazlia un ogRestore REPO

#Códigos de error de ogRestoreImage
#@exception OG_ERR_FORMAT   1 formato incorrecto.
#@exception OG_ERR_NOTFOUND  2 fichero de imagen o partición no detectados.
#@exception OG_ERR_PARTITION 3	# Error en partición de disco.
#@exception OG_ERR_LOCKED    4 partición bloqueada por otra operación.
#@exception OG_ERR_IMAGE    5 error al restaurar la imagen del sistema.
#@exception OG_ERR_IMGSIZEPARTITION  30 Tamaño de la particion es menor al tamaño de la imagen.
#@todo: el scripts restoreImage limitarlo a origen:fichero destino:particion
#@version 1.0.1 - Separación en protocolos de transferencia y postconfiguracion
#@author  Antonio J. Doblas Viso. Universidad de Málaga
#@date   2011-05-11
#@version 1.0.1 - Separación de los ficheros-log para ser gestionado por el httpd-log
#@author Antonio J. Doblas Viso. Universidad de Málaga  
#@date   2011-05-11


TIME1=$SECONDS

OGLOGSESSION="${OGLOGSESSION=:-/tmp/session.log}"
OGLOGCOMMAND="${OGLOGCOMMAND=:-/tmp/command.log}"

OGLOGSESSION="/tmp/session.log"
OGLOGCOMMAND="/tmp/command.log"

echo " " > $OGLOGSESSION
echo " " > $OGLOGCOMMAND
echo " " > ${OGLOGCOMMAND}.tmp
# Registro de ejecución
echo $* >> $OGLOGSESSION
echo "$*" &>> $OGLOGSESSION | $(tail -n 1 $OGLOGSESSION >> $OGLOGFILE)


echo "[1] Iniciando $0 $*" | tee -a $OGLOGSESSION $OGLOGFILE

# Si el origen(pariticion) esta bloqueada salir.

echo "TODO comprobando si esta bloqueado el $1 $2" | tee -a $OGLOGSESSION $OGLOGFILE
#if ogIsLocked $1 $2; then
#	ogRaiseError $OG_ERR_LOCKED "$MSG_PARTITION, $1 $2"
#	exit $?
#fi

# Valor por defecto para el repositorio.
REPO=${4:-"REPO"}
[ "$REPO" == "$(ogGetRepoIp)" ] && REPO="REPO"
[ "$REPO" == "$(ogGetIpAddress)" ] && REPO="CACHE"
[ "$REPO" == "CACHE" ] && REPO="CACHE"


if [ "$REPO" == "CACHE" ] 
then
	echo "[2] Iniciando un ogRestoreImage CACHE $3 $1 $2" | tee -a $OGLOGSESSION $OGLOGFILE
	ogRestoreImage CACHE "$3" "$1" "$2" &>> $OGLOGCOMMAND
	RETVAL=$?
fi	



if [ "$REPO" == "REPO" ]
then
	echo "[2] updateCache REPO \"$3.img\" $5 $6"	 | tee -a $OGLOGSESSION $OGLOGFILE
	TIME2=$SECONDS
	updateCache REPO "$3.img" "$5" "$6"	 &>> $OGLOGCOMMAND	
	RETVAL=$?
	TIME2=$[SECONDS-TIME2]
	echo "   [ ] Duracion del subproceso updateCache $[TIME2/60]m $[TIME2%60]s" | tee -a $OGLOGSESSION $OGLOGFILE
	case $RETVAL in
		0)
		echo "[50] updateCache (correcto)" | tee -a $OGLOGSESSION $OGLOGFILE
		echo "[55] Restaurando la imagen desde la cache con comando: ogRestoreImage CACHE $3 $1 $2 UNICAST" | tee -a $OGLOGSESSION $OGLOGFILE
		TIME3=$SECONDS
		ogRestoreImage CACHE "$3" "$1" "$2" &> $OGLOGCOMMAND	 
		RETVAL=$? 
		TIME3=$[SECONDS-TIME3]
		echo "   [ ] Duracion del subproceso ogRestoreImage CACHE $[TIME3/60]m $[TIME3%60]s" | tee -a $OGLOGSESSION $OGLOGFILE
		;;
		15)
		echo "[50] updateCache(no hay CACHE); se realiza ogRestoreImage REPO $3 $1 $2 UNICAST"  | tee -a $OGLOGSESSION $OGLOGFILE
		echo "[55] Se restaura la imagen directamente desde el REPO: ogRestoreImage REPO $3 $1 $2 UNICAST"  | tee -a $OGLOGSESSION $OGLOGFILE
		TIME3=$SECONDS
		ogRestoreImage REPO "$3" "$1" "$2" &> $OGLOGCOMMAND		
		RETVAL=$?
		;;
		16)
		echo "[50] updateCache(no hay espacio sufiente en la CACHE), Se realiza ogRestoreImage REPO $3 $1 $2 UNICAST"  | tee -a $OGLOGSESSION $OGLOGFILE
		TIME3=$SECONDS
		ogRestoreImage REPO "$3" "$1" "$2" &> $OGLOGCOMMAND		
		RETVAL=$? 
		TIME3=$[SECONDS-TIME3]
		echo "   [ ] Duracion del subproceso ogRestoreImage REPO $[TIME3/60]m $[TIME3%60]s" | tee -a $OGLOGSESSION $OGLOGFILE
		;;
	esac
fi

if [ $RETVAL == 0 ]
then
	echo "[90] Iniciando la Configuracion del Sistema Restaurado" | tee -a $OGLOGSESSION $OGLOGFILE
	configureOs "$1" "$2"
fi

TIME=$[SECONDS-TIME1]
echo "[100] Duracion de la operacion $[TIME/60]m $[TIME%60]s" | tee -a $OGLOGSESSION $OGLOGFILE


exit $RETVAL


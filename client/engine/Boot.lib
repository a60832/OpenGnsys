#!/bin/bash
#/**
#@file    Boot.lib
#@brief   Librería o clase Boot
#@class   Boot
#@brief   Funciones para arranque y post-configuración de sistemas de archivos.
#@version 0.9
#@warning License: GNU GPLv3+
#*/


#/**
#         ogBoot int_ndisk int_npartition
#@brief   Inicia el proceso de arranque de un sistema de archivos.
#@param   int_ndisk      nº de orden del disco
#@param   int_npartition nº de orden de la partición
#@return  (activar el sistema de archivos).
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_NOTFOUND  Disco o particion no corresponden con un dispositivo.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@exception OG_ERR_NOTOS     La partición no tiene instalado un sistema operativo.
#@note    En Linux, debe arrancarse la partición del directorio \c /boot
#@version 0.1 - Integracion para OpenGNSys. - EAC: HDboot(); BootLinuxEX() en Boot.lib  
#@author  Antonio J. Doblas Viso, Universidad de Malaga
#@date    2008-10-27
#@version 0.9 - Adaptacion para OpenGNSys.
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009-09-11
#*/ ##
function ogBoot ()
{
# Variables locales.
local PART TYPE MNTDIR PARAMS KERNEL INITRD APPEND FILE LOADER

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk int_npartition" \
           "$FUNCNAME 1 1"
    return
fi
# Error si no se reciben 2 parámetros.
[ $# == 2 ] || ogRaiseError $OG_ERR_FORMAT || return $?

# Detectar tipo de sistema de archivos y montarlo.
PART=$(ogDiskToDev $1 $2) || return $?
TYPE=$(ogGetFsType $1 $2) || return $?
MNTDIR=$(ogMount $1 $2) 2>/dev/null
[ -z "$MNTDIR" ] && ogRaiseError OG_ERR_PARTITION "$1, $2" && return $?

case "$TYPE" in
    EXT[234]|REISERFS|REISER4|JFS|XFS)
        # Obtiene los parámetros de arranque para Linux.
        PARAMS=$(ogLinuxBootParameters $1 $2) || return $?
        read -e KERNEL INITRD APPEND <<<"$PARAMS"
        # Si no hay kernel, no hay sistema operativo.
        [ -z "$KERNEL" ] && ogRaiseError $OG_ERR_NOTOS && return $?
        # Arrancar de partición distinta a la original.
        [ -e "$MNTDIR/etc" ] && APPEND=$(echo $APPEND | awk -v P="$PART " '{sub (/root=[-+=_/a-zA-Z0-9]* /,"root="P);print}')
        # Configurar kernel Linux con los parámetros leídos de su GRUB.
        kexec -l "${MNTDIR}${KERNEL}" --append="$APPEND" --initrd="${MNTDIR}${INITRD}"
        ;;
    NTFS|HNTFS|FAT32|HFAT32)
        # Compruebar si hay un cargador de Windows.
        for f in io.sys ntldr bootmgr; do
            FILE="$(ogGetPath $1 $2 $f 2>/dev/null)"
            [ -n "$FILE" ] && LOADER="$f"
        done
        [ -z "$LOADER" ] && ogRaiseError $OG_ERR_NOTOS && return $?
        # Activar la partición y copiar Grub4DOS.
        ogSetPartitionActive $1 $2
        #FIXME: activar seguimiento inicio sesion Windows con grub4dos
		#if `ogGetOsVersion $1 $2 | grep "Windows" > /dev/null`
        #then 
        #	dd if=/dev/zero of=${MNTDIR}/ogboot.me  bs=1024 count=3
        #	dd if=/dev/zero of=${MNTDIR}/ogboot.firstboot  bs=1024 count=3
        #	dd if=/dev/zero of=${MNTDIR}/ogboot.secondboot  bs=1024 count=3         
        #	ogLoadHiveWindows $1 $2
		#	ogHiveNTRunMachine "cmd /c del c:\ogboot.* "  ogcleanboot
		#	ogUpdateHiveWindows
		#	reboot
        #else        
        	cp $OGLIB/grub4dos/* $MNTDIR    # */ (Comentario Doxygen)
        	##kexec -l $MNTDIR/grub.exe --append=--config-file="find --set-root /$LOADER; chainloader /$LOADER; tpm --init"
        	kexec -l $MNTDIR/grub.exe --append=--config-file="root (hd$[$1-1],$[$2-1]); chainloader (hd$[$1-1],$[$2-1])/$LOADER; tpm --init"
		#fi
        ;;
    *)  ogRaiseError $OG_ERR_PARTITION "$1, $2"
        return $?
        ;;
esac

# Arrancar.
kexec -e
}


#/**
#         ogGetWindowsName int_ndisk int_npartition
#@brief   Muestra el nombre del equipo en el registro de Windows.
#@param   int_ndisk      nº de orden del disco
#@param   int_npartition nº de orden de la partición
#@return  str_name - nombre del equipo
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_NOTFOUND  Disco o particion no corresponden con un dispositivo.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@version 0.9 - Adaptación para OpenGNSys.
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009-09-23
#*/ ##
function ogGetWindowsName ()
{
# Variables locales.
local PART MNTDIR

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk int_npartition" \
           "$FUNCNAME 1 1  ==>  PRACTICA-PC"
    return
fi
# Error si no se reciben 2 parámetros.
[ $# == 2 ] || ogRaiseError $OG_ERR_FORMAT || return $?

# Montar el sistema de archivos.
MNTDIR=$(ogMount $1 $2) 2>/dev/null
[ -z "$MNTDIR" ] && ogRaiseError OG_ERR_PARTITION "$1, $2" && return $?

# Obtener dato del valor de registro.
ogGetRegistryValue $MNTDIR system '\ControlSet001\Control\ComputerName\ComputerName\ComputerName'
}


#/**
#         ogLinuxBootParameters int_ndisk int_npartition
#@brief   Muestra los parámetros de arranque de un sistema de archivos Linux.
#@param   int_ndisk      nº de orden del disco
#@param   int_npartition nº de orden de la partición
#@return  str_kernel str_initrd str_parameters ...
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_NOTFOUND  Disco o particion no corresponden con un dispositivo.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@warning Función básica usada por \c ogBoot
#@version 0.9 - Primera adaptación para OpenGNSys.
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009-09-11
#@version 0.9.2 - Soporta partición /boot independiente.
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2010-07-20
#*/ ##
function ogLinuxBootParameters ()
{
# Variables locales.
local MNTDIR CONFDIR CONFFILE

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk int_npartition" \
           "$FUNCNAME 1 2  ==>  ..."
    return
fi
# Error si no se reciben 2 parámetros.
[ $# == 2 ] || ogRaiseError $OG_ERR_FORMAT || return $?

# Detectar id. de tipo de partición y codificar al mnemonico.
MNTDIR=$(ogMount $1 $2) 2>/dev/null
[ -z "$MNTDIR" ] && ogRaiseError OG_ERR_PARTITION "$1, $2" && return $?

# Fichero de configuración de GRUB.
CONFDIR=$MNTDIR                               # Partición de arranque /boot.
[ -d $MNTDIR/boot ] && CONFDIR=$MNTDIR/boot   # Partición raíz con directorio boot.
CONFFILE="$CONFDIR/grub/menu.lst"
[ ! -e $CONFFILE ] && CONFFILE="$CONFDIR/grub/grub.cfg"
[ ! -e $CONFFILE ] && ogRaiseError $OG_ERR_NOTFOUND "grub.cfg" && return $?

# Toma del fichero de configuracion los valores del kernel, initrd
#       y parámetros de arranque usando las cláusulas por defecto
#       ("default" en GRUB1, "set default" en GRUB2)
#       y los formatea para que sean compatibles con \c kexec .  */
# /* (comentario Doxygen)
awk 'BEGIN {cont=-1;}
     $1~/^default/      {sub(/=/," "); def=$2;}
     $1~/^set/ && $2~/^default/ {gsub(/[="]/," "); def=$3;}
     $1~/^title|^menuentry/ {cont++}
     $1~/^kernel|^linux/ {if (def==cont) {
                            kern=$2;
                            sub($1,"");sub($1,"");sub(/^[ \t]*/,"");app=$0}  # /* (comentario Doxygen)
                        }
     $1~/^initrd/       {if (def==cont) init=$2}
     END {if (kern!="") printf("%s %s %s", kern,init,app)}
    ' $CONFFILE
# */ (comentario Doxygen)
}


#/**
#         ogSetWindowsName int_ndisk int_npartition str_name
#@brief   Establece el nombre del equipo en el registro de Windows.
#@param   int_ndisk      nº de orden del disco
#@param   int_npartition nº de orden de la partición
#@param   str_name       nombre asignado
#@return  (nada)
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_NOTFOUND  Disco o particion no corresponden con un dispositivo.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@version 0.9 - Adaptación a OpenGNSys.
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009-09-24
#*/ ##
function ogSetWindowsName ()
{
# Variables locales.
local PART MNTDIR NAME

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk int_npartition str_name" \
           "$FUNCNAME 1 1 PRACTICA-PC"
    return
fi
# Error si no se reciben 3 parámetros.
[ $# == 3 ] || ogRaiseError $OG_ERR_FORMAT || return $?

# Montar el sistema de archivos.
MNTDIR=$(ogMount $1 $2) 2>/dev/null
[ -z "$MNTDIR" ] && ogRaiseError OG_ERR_PARTITION "$1, $2" && return $?
NAME="$3"

# Modificar datos de los valores de registro.
ogSetRegistryValue $MNTDIR system '\ControlSet001\Control\ComputerName\ComputerName\ComputerName' "$NAME" 2>/dev/null
ogSetRegistryValue $MNTDIR system '\ControlSet001\Services\Tcpip\Parameters\Hostname' "$NAME" 2>/dev/null
ogSetRegistryValue $MNTDIR system '\ControlSet001\services\Tcpip\Parameters\Hostname' "$NAME" 2>/dev/null
ogSetRegistryValue $MNTDIR system '\ControlSet001\Services\Tcpip\Parameters\NV Hostname' "$NAME" 2>/dev/null
ogSetRegistryValue $MNTDIR system '\ControlSet001\services\Tcpip\Parameters\NV Hostname' "$NAME" 2>/dev/null
}


#/**
#         ogSetWinlogonUser int_ndisk int_npartition str_username
#@brief   Establece el nombre de usuario por defecto en la entrada de Windows.
#@param   int_ndisk      nº de orden del disco
#@param   int_npartition nº de orden de la partición
#@param   str_username   nombre de usuario por defecto
#@return  (nada)
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_NOTFOUND  Disco o particion no corresponden con un dispositivo.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@version 0.9.2 - Adaptación a OpenGNSys.
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2010-07-20
#*/ ##
function ogSetWinlogonUser ()
{
# Variables locales.
local PART MNTDIR NAME

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk int_npartition str_username" \
           "$FUNCNAME 1 1 USUARIO"
    return
fi
# Error si no se reciben 3 parámetros.
[ $# == 3 ] || ogRaiseError $OG_ERR_FORMAT || return $?

# Montar el sistema de archivos.
MNTDIR=$(ogMount $1 $2) 2>/dev/null
[ -z "$MNTDIR" ] && ogRaiseError OG_ERR_PARTITION "$1, $2" && return $?
NAME="$3"

# Modificar datos en el registro.
ogSetRegistryValue $MNTDIR SOFTWARE '\Microsoft\Windows NT\CurrentVersion\Winlogon\DefaultUserName' "$3"
}


#/**
#         ogBootMbrXP int_ndisk
#@brief   Genera un nuevo Master Boot Record en el disco duro indicado, compatible con los SO tipo Windows
#@param   int_ndisk      nº de orden del disco
#@return  salida del programa my-sys
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@version 0.9 - Adaptación a OpenGNSys.
#@author  Antonio J. Doblas Viso. Universidad de Málaga
#@date    2009-09-24
#*/ ##

function ogBootMbrXP ()
{
# Variables locales.
local PART

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk " \
           "$FUNCNAME 1 "
    return
fi
# Error si no se reciben 1 parámetros.
[ $# == 1 ] || ogRaiseError $OG_ERR_FORMAT || return $?

PART="$(ogDiskToDev $1)" || return $?
ms-sys -z -f $PART
ms-sys -m -f $PART
}


#/**
#         ogBootMbrGeneric int_ndisk
#@brief   Genera un nuevo Codigo de arranque en el MBR del disco indicado, compatible con los SO tipo Windows, Linux.
#@param   int_ndisk      nº de orden del disco
#@return  salida del programa my-sys
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_NOTFOUND Tipo de partición desconocido o no se puede montar.
#@version 0.9 - Adaptación a OpenGNSys.
#@author  Antonio J. Doblas Viso. Universidad de Málaga
#@date    2009-09-24
#*/ ##

function ogBootMbrGeneric ()
{
# Variables locales.
local PART

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk " \
           "$FUNCNAME 1 "
    return
fi
# Error si no se reciben 1 parámetros.
[ $# == 1 ] || return $(ogRaiseError $OG_ERR_FORMAT; echo $?) 

PART="$(ogDiskToDev $1)" || return $(ogRaiseError $OG_ERR_NOTFOUND; echo $?)
ms-sys -z -f $PART
ms-sys -s -f $PART
}




#/**
#         ogFixBootSector int_ndisk int_parition
#@brief   Corrige el boot sector de una particion activa para MS windows/dos -fat-ntfs
#@param   int_ndisk      nº de orden del disco
#@param   int_partition     nº de particion
#@return  
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@version 0.9 - Adaptación a OpenGNSys.
#@author  Antonio J. Doblas Viso. Universidad de Málaga
#@date    2009-09-24
#*/ ##

function ogFixBootSector ()
{
# Variables locales.
local PART DISK FILE

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk int_partition " \
           "$FUNCNAME 1 1 "
    return
fi

# Error si no se reciben 2 parámetros.
[ $# == 2 ] || return $(ogRaiseError $OG_ERR_FORMAT; echo $?)

#TODO, solo si la particion existe
#TODO, solo si es ntfs o fat
PARTYPE=$(ogGetPartitionId $1 $2) 
case $PARTYPE in
	1|4|6|7|b|c|e|f)
	;;
	*)
	return $(ogRaiseError $OG_ERR_PARTITION; echo $?)
	;;
esac

ogUnmount $1 $2 || return $(ogRaiseError $OG_ERR_PARTITION; echo $?)

#Preparando instruccion	
let DISK=$1-1	
PART=$2
FILE=/tmp/temporal
cat > $FILE <<EOF
disk=$DISK
main_part=$PART
fix_first_sector=yes
EOF

spartlnx.run -cui -nm -a -f $FILE

}



#/**
#         ogWindowsBootParameters int_ndisk int_parition
#@brief   Configura el gestor de arranque de windows 7 / vista / XP / 2000
#@param   int_ndisk      nº de orden del disco
#@param   int_partition     nº de particion
#@return  
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@version 0.9 - Integración desde EAC para OpenGNSys.
#@author  Antonio J. Doblas Viso. Universidad de Málaga
#@date    2009-09-24
#@version 1.0.1 - Adapatacion para OpenGnsys.
#@author  Antonio J. Doblas Viso. Universidad de Málaga
#@date    2011-05-20
#*/ ##


function ogWindowsBootParameters ()
{
# Variables locales.
local PART DISK FILE
#Preparando variables adaptadas a sintaxis windows.
let DISK=$1-1
PART=$2	
FILE=/tmp/temporal

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk int_partition " \
           "$FUNCNAME 1 1 "
    return
fi

# Error si no se reciben 2 parámetros.
[ $# == 2 ] || return $(ogRaiseError $OG_ERR_FORMAT; echo $?)

ogDiskToDev $1 $2 || return $(ogRaiseError $OG_ERR_PARTITION; echo $?)

VERSION=$(ogGetOsVersion $1 $2)

if echo "$VERSION" | grep "Windows 7"
then
	WINVER="Windows 7"
elif echo "$VERSION" | grep "Windows Seven"
then 
	WINVER="Windows Vista"
elif echo "$VERSION" | grep "XP"
then
	MOUNT=$(ogMount $1 $2)
	[ -f ${MOUNT}/boot.ini ] || return $(ogRaiseError $OG_ERR_NOTOS; echo $?)
	cat ${MOUNT}/boot.ini | sed s/partition\([0-9]\)/partition\($PART\)/g | sed s/rdisk\([0-9]\)/rdisk\($DISK\)/g > ${MOUNT}/tmp.boot.ini; mv ${MOUNT}/tmp.boot.ini ${MOUNT}/boot.ini
	return 0
else
	return $(ogRaiseError $OG_ERR_NOTOS; echo $?)
fi

ogUnmount $1 $2 || return $(ogRaiseError $OG_ERR_PARTITION; echo $?)


#Preparando instruccion	Windows Resume Application
cat > $FILE <<EOF
boot_disk=$DISK
boot_main_part=$PART
disk=$DISK
main_part=$PART
boot_entry=Windows Resume Application
EOF
spartlnx.run -cui -nm -w -f $FILE

#Preparando instruccion	tipo windows
cat > $FILE <<EOF
boot_disk=$DISK
boot_main_part=$PART
disk=$DISK
main_part=$PART
boot_entry=$WINVER
EOF
spartlnx.run -cui -nm -w -f $FILE

##Preparando instruccion	Ramdisk Options
#cat > $FILE <<EOF
#boot_disk=$DISK
#boot_main_part=$PART
#disk=$DISK
#main_part=$PART
#boot_entry=Ramdisk Options
#EOF
#spartlnx.run -cui -nm -w -f $FILE

#Preparando instruccion	Windows Boot Manager
cat > $FILE <<EOF
boot_disk=$DISK
boot_main_part=$PART
disk=$DISK
main_part=$PART
boot_entry=Windows Boot Manager
EOF
spartlnx.run -cui -nm -w -f $FILE

#Preparando instruccion	Herramienta de diagnóstico de memoria de Windows
#cat > $FILE <<EOF
#boot_disk=$DISK
#boot_main_part=$PART
#disk=$DISK
#main_part=$PART
#boot_entry=Herramienta de diagnóstico de memoria de Windows
#EOF
#spartlnx.run -cui -nm -w -f $FILE

}
	

#         ogWindowsRegisterPartition int_ndisk int_partiton str_volume int_disk int_partition
#@brief   Registra una partición en windows con un determinado volumen.
#@param   int_ndisk      nº de orden del disco a registrar
#@param   int_partition     nº de particion a registrar
#@param   str_volumen      volumen a resgistar
#@param   int_ndisk_windows      nº de orden del disco donde esta windows
#@param   int_partition_windows     nº de particion donde esta windows
#@return  
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_PARTITION Tipo de partición desconocido o no se puede montar.
#@version 0.9 - Adaptación a OpenGNSys.
#@author  Antonio J. Doblas Viso. Universidad de Málaga
#@date    2009-09-24
#*/ ##


function ogWindowsRegisterPartition ()
{	
# Variables locales.
local PART DISK FILE

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk_TO_registre int_partition_TO_registre str_NewVolume int_disk int_parition " \
           "$FUNCNAME 1 1 c: 1 1"
    return
fi

# Error si no se reciben 5 parámetros.
[ $# == 5 ] || return $(ogRaiseError $OG_ERR_FORMAT; echo $?)

REGISTREDDISK=$1
REGISTREDPART=$2
REGISTREDVOL=$(echo $3 | cut -c1 | tr '[:lower:]' '[:upper:]')
DISK=$4
PART=$5
FILE=/tmp/temporal

ogDiskToDev $REGISTREDDISK $REGISTREDPART || return $(ogRaiseError $OG_ERR_PARTITION "particion a registrar "; echo $?)
ogDiskToDev $DISK $PART || return $(ogRaiseError $OG_ERR_PARTITION "particion de windows"; echo $?)

ogGetOsType $DISK $PART | grep "Windows" || return $(ogRaiseError $OG_ERR_NOTOS "no es windows"; echo $?)

VERSION=$(ogGetOsVersion $DISK $PART)

#Systemroot

if ogGetPath $DISK $PART WINDOWS
then
	SYSTEMROOT="Windows"
elif ogGetPath $DISK $PART WINNT
then 
	SYSTEMROOT="winnt"
else
	return $(ogRaiseError $OG_ERR_NOTOS; echo $?)
fi

ogUnmount $DISK $PART
let DISK=$DISK-1
let REGISTREDDISK=$REGISTREDDISK-1
#Preparando instruccion	Windows Boot Manager
cat > $FILE <<EOF
windows_disk=$DISK
windows_main_part=$PART
windows_dir=$SYSTEMROOT
disk=$REGISTREDDISK
main_part=$REGISTREDPART
;ext_part
part_letter=$REGISTREDVOL
EOF
spartlnx.run -cui -nm -u -f $FILE
}

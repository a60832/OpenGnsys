#!/bin/bash

#/**
#         ogCheckStringInGroup 
#@brief   Función para determinar si el elemento pertenece a un conjunto
#@param 1 elemento a comprobar
#@param 2 grupo de elementos para comprobar tipo "valor1 valor2 valor3"
#@return  0 si pertenece al grupo
#@return  1 si NO pertenece al grupo
#@exception OG_ERR_FORMAT     formato incorrecto.
#@note    
#@todo 
#@version 0.91 - Definición de 
#@author  Antonio Doblas Viso, Universidad de Málaga
#@date    2010/05/09
#*/ ##
#/**
ogCheckStringInGroup ()
{
# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME str_elemento    str_grupo" \
		   "$FUNCNAME full-duplex \"full-duplex half-duplex broadcast\" "
    return
fi

# Error si no se recibe 2 parámetro.
[ $# == 2 ] || ogRaiseError $OG_ERR_FORMAT || return $?


for i in `echo $2`
do
  if [ "$1" == "$i" ] 
  then
      return 0
  fi
done

return 1
} 

#/**
#         ogCheckStringInReg
#@brief   Función para determinar si el elemento contiene una "expresión regular"
#@param 1 elemento a comprobar
#@param 2 expresión regular"
#@return  0 si coincide con la expresión
#@return  1 si NO coincide con la expresión
#@exception OG_ERR_FORMAT     formato incorrecto.
#@note    
#@todo 
#@version 0.91 - Definición de 
#@author  Antonio Doblas Viso, Universidad de Málaga
#@date    2010/05/09
#*/ ##
#/**


ogCheckStringInReg()
{

local REG

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME str_elemento    str_expresión_regular" \
		   "$FUNCNAME 50M \"^[0-9]{1,2}\M$\" "
    return
fi

# Error si no se recibe 2 parámetro.
[ $# == 2 ] || ogRaiseError $OG_ERR_FORMAT || return $?

REG=$2
[[ $1 =~ $REG ]] && return 0 || return 1
}



#/**
#         ogCheckIpAddress
#@brief   Función para determinar si una cadena es una dirección ipv4 válida
#@param 1 string de la ip a comprobar
#@return  0 si es una dirección válida
#@return  1 si NO es una dirección válida
#@exception OG_ERR_FORMAT     formato incorrecto.
#@note    
#@todo 
#@version 0.91 - Definición de 
#@author  Antonio Doblas Viso, Universidad de Málaga
#@date    2010/05/09
#*/ ##
#/**
ogCheckIpAddress()
{
local REG IP arrIP

# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME str_IpAddressToCheck" \
		   "$FUNCNAME 192.18.35.3"
    return
fi

# Error si no se recibe 1 parámetro.
[ $# == 1 ] || ogRaiseError $OG_ERR_FORMAT || return $?
   
    
IP=$1
REG="^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$"
if [[ "$IP" =~ $REG ]]
then    	
	OIFS=$IFS; 
    IFS='.' ; 
    arrIP=($IP)  
    IFS=$OIFS           
    if [[ ${arrIP[0]} -le 255 && ${arrIP[1]} -le 255 && ${arrIP[2]} -le 255 && ${arrIP[3]} -le 255 ]]
    then
    	return 0
    fi
fi
return 1
}

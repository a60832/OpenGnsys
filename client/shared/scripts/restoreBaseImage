#!/bin/bash
#/**
#         restoreBaseImage
#@brief Script de ejemplo para restaurar una imagen 
#@brief (puede usarse como base para el programa de restauración de imágenes usado por OpenGNSys Admin).
#@param 1 REPO|CACHE
#@param 2 imagen
#@param 3 disco 
#@param 4 particion 
#@param 5 protocolo 
#@param 6 opciones protocolo
#@return 
#@exception OG_ERR_FORMAT  # 1 formato incorrecto.
#@exception updateCache    # 15 No hay cache 
#@exception updateCache    # 16 no hay espacio sufiente 
#@exception "Error al montar la imagen" INTERNACIONALIZAR
#@todo: Probar rsync desde repo sin samba
#@todo: Se puede dar la opcion de que mantenga los ficheros nuevos.
#@todo: Se puede dar la opcion que la trasferencia se manden los datos comprimidos.
#@note  se toma como punto de partida el script restoreImage
#@version 1.0 - restauración de imagen con sincronizacion.
#@author  
#@date   2012-12-04
#*/ ##
trap "ogUnlockImage $1  /$2.$IMGEXT ; ogUnlock $3 $4; umount $DIRMOUNT"  1 2 3 6 9 14 15

TIME1=$SECONDS
PROG="$(basename $0)"
if [ $# -lt 4 ]; then
    ogRaiseError $OG_ERR_FORMAT "$MSG_FORMAT: $PROG REPO|CACHE imagen ndisco nparticion [ UNICAST|MULTICAST|TORRENT ] [opciones protocolo]"
    exit $?
fi
echo "[1] $0 $*" | tee -a $OGLOGSESSION $OGLOGFILE


# Procesar parámetros de entrada
IMGTYPE="img"
IMGFILE=$(ogGetPath "$1" "$2.$IMGTYPE")  || exit $(ogRaiseError $OG_ERR_NOTFOUND "$1 $2.$IMGTYPE"; echo $?)

PROTO=${5:-"UNICAST"}
if [ "$1" == "CACHE" -o "$1" == "cache" ]; then
   echo "[10] Realizando un updateCache REPO $2.img $PROTO $6" | tee -a $OGLOGSESSION $OGLOGFILE
   echo "   updateCache REPO" "/$2.img" "$PROTO" "$6" 
# PARA LAS PRUEBAS lo comentamos
#   updateCache REPO "/$2.img" "$PROTO" "$6"     &>> $OGLOGCOMMAND
   RETVAL=$?
   if [ "$RETVAL" != "0" ] 
        then 
        echo "[49] Fin del updateCache REPO $2.img $5 $6 con error $RETVAL" | tee -a $OGLOGSESSION $OGLOGFILE 
        # RC=15 No hay cache 
        # RC=16 no hay espacio sufiente 
        exit $RETVAL 
   fi 
fi 

TIME2=$SECONDS

PART=$(ogDiskToDev "$3" "$4") || exit $?

# Restaurar la imagen.
echo "[40] Restaurar imagen en $PART"
DEST=$(ogMount "$3" "$4")
DIRMOUNT="/tmp/mount$$"
IMGINFO="$DEST/ogimg.info"
IMGACL="ogimg.acl"

# Montamos la imagen basica.
ogLock $3 $4
ogLockImage "$1"  "/$2.$IMGEXT"

mkdir $DIRMOUNT
echo "   mount -t squashfs -o loop  $IMGFILE $DIRMOUNT"
mount -t squashfs -o loop  $IMGFILE $DIRMOUNT 1>/dev/null 
# Comprobamos que la imagen se ha montado -> si no se borra la particion
[ -r "$DIRMOUNT/ogimg.info" ] || echo "Error al montar la imagen" || exit 2

# Restauramos la imagen
echo "   rsync -aHAX --delete --quiet $DIRMOUNT/ $DEST"
rsync -aHAX --delete --quiet $DIRMOUNT/ $DEST |tee -a $OGLOGSESSION $OGLOGFILE
umount $DIRMOUNT
ogUnlockImage "$1"  "/$2.$IMGEXT"
TIMEAUX2=$[SECONDS-TIME2]
echo "   Fin Restauracion: tiempo parcial : $[TIMEAUX2/60]m $[TIMEAUX2%60]s" | tee -a $OGLOGSESSION $OGLOGFILE

# Restableciendo acl

if [ $(ogGetFsType $3 $4) == "NTFS" ] ; then
	echo "[70] Restablecioendo lista de control de acceso."
	cp $DEST/$IMGACL /tmp
	ogUnmount "$3" "$4"
	echo "   ntfs-3g.secaudit -se $PART" 
	ntfs-3g.secaudit -se $PART /tmp/$IMGACL
	TIMEAUX3=$[SECONDS-TIMEAUX2]
	echo "   Fin restablecer lista de control de acceso, tiempo parcial  : $[TIMEAUX3/60]m $[TIMEAUX3%60]s" | tee -a $OGLOGSESSION $OGLOGFILE
fi
ogUnlock $3 $4

# Llamar al script de post-configuración del sistema operativo.
echo "[90] Post-configuracion de arranque del sistema."
configureOs $3 $4

TIME=$[SECONDS-TIME1]
echo "[100] Duracion de la operacion $[TIME/60]m $[TIME%60]s"


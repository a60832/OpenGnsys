#!/bin/bash
#/**
#         restoreiDiffSquash
#@brief Script de ejemplo para restaurar una imagen diferencial.
#@brief (puede usarse como base para el programa de restauración de imágenes usado por OpenGNSys Admin).
#@param 1 REPO|CACHE
#@param 2 imagen
#@param 3 disco 
#@param 4 particion 
#@param 5 protocolo 
#@param 6 opciones protocolo
#@return 
#@exception OG_ERR_FORMAT  # 1 formato incorrecto.
#@exception updateCache    # 15 No hay cache 
#@exception updateCache    # 16 no hay espacio sufiente 
#@exception "Error al montar la imagen" INTERNACIONALIZAR
#@todo: Se puede dar la opcion de que mantenga los ficheros nuevos.
#@todo: Se puede dar la opcion que la trasferencia se manden los datos comprimidos.
#@version 1.0 - restauración de imagen con sincronizacion.
#@author  
#@date   2012-12-04
#*/ ##
trap "ogUnlockImage $1  /$2.$IMGEXT ; ogUnlock $3 $4; umount $DIRMOUNT; exit 1" 1 2 3 6 9 14 15

# Limpiamos los archivo de log
echo "" >$OGLOGCOMMAND

TIME1=$SECONDS
PROG="$(basename $0)"
if [ $# -lt 4 ]; then
    ogRaiseError $OG_ERR_FORMAT "$MSG_FORMAT: $PROG REPO|CACHE imagen[.sujijo] ndisco nparticion [ UNICAST|MULTICAST|TORRENT ] [opciones protocolo]"
    exit $?
fi

echo "[1] $MSG_SCRIPTS_START $0 $*" | tee -a  $OGLOGFILE

# Procesar parámetros de entrada
DIFFEXT="diff"
REPODIFFFILE=$(ogGetPath "REPO" "$2.$DIFFEXT") || exit $(ogRaiseError $OG_ERR_NOTFOUND "$2.$DIFFEXT"; echo $?)

# Comprobamos si la imagen o la particion estan bloqueada:
ogIsImageLocked "$1" "$2.$DIFFEXT" && exit $(ogRaiseError $OG_ERR_LOCKED "$1 $2.$DIFFEXT"; echo $?)
ogIsLocked "$3" "$4" && exit $(ogRaiseError $OG_ERR_LOCKED  "$3 $4"; echo $?)

# Carga del configurador del engine
[ -z $OGENGINECONFIGURATE ] && source /opt/opengnsys/etc/engine.cfg

# Comprobar que es sincronizable
# TODO: crear mensaje de error.
file $REPODIFFFILE | grep " BTRFS Filesystem" >/dev/null
[ $? == 0 ]  ||  exit  $(ogRaiseError $OG_ERR_IMAGE "$3 $4"; echo $?)

PROTO=${5:-"UNICAST"}

if [ "$1" == "CACHE" -o "$1" == "cache" ]; then
   echo "[10] Realizando la actualizacion de la cache." | tee -a  $OGLOGFILE
   echo "     updateCache REPO" "/$2.$DIFFEXT" "$PROTO" "$6"  | tee -a  $OGLOGFILE   
   updateCache REPO "/$2.$DIFFEXT" "$PROTO" "$6"  &>> $OGLOGCOMMAND
   RETVAL=$?
   if [ "$RETVAL" != "0" ] 
        then 
        echo "[49] Fin del updateCache REPO $2.$DIFFEXT $5 $6 con error $RETVAL" | tee -a  $OGLOGFILE 
        # RC=15 No hay cache 
        # RC=16 no hay espacio sufiente 
        exit $RETVAL 
   fi 

   TIMEAUX1=$[SECONDS-TIME]
   echo "     Fin actualizacion cache $1 $2 $3 $4 tiempo parcial : $[TIMEAUX2/60]m $[TIMEAUX2%60]s" | tee -a  $OGLOGFILE
fi 
TIME2=$SECONDS

PART=$(ogDiskToDev "$3" "$4" 2>/dev/null )  || exit $(ogRaiseError $OG_ERR_PARTITION "$1 $2"; echo $?)

# Restaurar la imagen.
echo "[40] Restaurar imagen en $PART"


# Montamos la diferencial
ogMountImage "$1" "$2" "diff"
#  Comprobar que la imagen diferencial se ha montado 
ogWaitMountImage "$1" "$2" "diff"

ogMount $3 $4 >/dev/null
ogLock $3 $4
# Sincronizamos la partición con la imagen.
ogSyncRestore "$1" "$2" "diff" $3 $4

# Desmontamos la imagen
ogUnmountImage "$1" "$2" "diff"

ogUnlock $3 $4
# creando enlaces y restableciendo ACL (en windows)
echo "     Diferencial: creando enlaces y borrando"  | tee -a  $OGLOGFILE
ogRestoreInfoImage  "$3" "$4" &>$OGLOGCOMMAND

TIMEAUX2=$[SECONDS-TIME2]
echo "     Fin Restauracion $1 $2 $3 $4 tiempo parcial : $[TIMEAUX2/60]m $[TIMEAUX2%60]s" | tee -a  $OGLOGFILE


# Llamar al script de post-configuración del sistema operativo.
echo "[90] Post-configuracion de arranque del sistema."
configureOs $3 $4


TIME=$[SECONDS-TIME1]
echo "[100] Duracion de la operacion $[TIME/60]m $[TIME%60]s"


#!/bin/bash
#/**
#         restoreiDiffSquash
#@brief Script de ejemplo para restaurar una imagen diferencial.
#@brief (puede usarse como base para el programa de restauración de imágenes usado por OpenGNSys Admin).
#@param 1 REPO|CACHE
#@param 2 imagen
#@param 3 disco 
#@param 4 particion 
#@param 5 protocolo 
#@param 6 opciones protocolo
#@return 
#@exception OG_ERR_FORMAT   # 1 formato incorrecto.
#@exception OG_ERR_NOTFOUND # 2 Fichero o dispositivo no encontrado
#@exception OG_ERR_PARTITION# 3 Error en partición de disco.
#@exception OG_ERR_LOCKED   # 4 Partición o fichero bloqueado.
#@exception updateCache     # 15 No hay cache 
#@exception updateCache     # 16 no hay espacio sufiente 
#@exception OG_ERR_DONTSYNC_IMAGE   # 71 Imagen no sincronizable (es monolitica)
#@exception OG_ERR_DONTMOUNT_IMAGE  # 70 Error al montar una imagen sincronizada.
#@todo: Se puede dar la opcion de que mantenga los ficheros nuevos.
#@todo: Se puede dar la opcion que la trasferencia se manden los datos comprimidos.
#@version 1.0 - restauración de imagen con sincronizacion.
#@author  
#@date   2012-12-04
#*/ ##
trap "onexit $1 \"$2\" $3 $4" 1 2 3 6 9 14 15 ERR

# Si salimos con error demontamos la imagen y desbloqueamos la imagen y la particion
function onexit() {
    local exit_status=$?
    echo "$MSG_ERR_GENERIC $exit_status" |tee -a $OGLOGFILE  $OGLOGSESSION
    ogUnmountImage "$1" "$2" "$DIFFTYPE" &>/dev/null
    ogUnlock $3 $4 &>/dev/null
    exit $exit_status
}


# Limpiamos los archivo de log
echo "" >$OGLOGCOMMAND

TIME1=$SECONDS
PROG="$(basename $0)"
# Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp  "$PROG: $MSG_HELP_restoreDiffImage" \
            "$PROG REPO|CACHE diff_image ndisco nparticion [ UNICAST|MULTICAST|TORRENT ] [opciones protocolo]" \
            "$PROG REPO Windows7_pc123 1 1 " \
            "$PROG CACHE Ubuntu12_aula21 1 6 MULTICAST 9000:full-duplex:239.194.14.00:150M:50:60"
    exit 0
fi

[ $# -lt 4 ] &&  ogRaiseError $OG_ERR_FORMAT "$MSG_FORMAT: $PROG REPO|CACHE diff_imagen ndisco nparticion [ UNICAST|MULTICAST|TORRENT ] [opciones protocolo]"

echo "[1] $MSG_SCRIPTS_START $0 $*" | tee -a  $OGLOGFILE

# Procesar parámetros de entrada
DIFFTYPE="diff"
DIFFEXT="img.diff"
REPODIFFFILE=$(ogGetPath "REPO" "$2.$DIFFEXT") || ogRaiseError $OG_ERR_NOTFOUND "REPO $2.$DIFFEXT"

# Comprobamos si la imagen o la particion estan bloqueada:
ogIsImageLocked "$1" "$2.$DIFFEXT" && ogRaiseError $OG_ERR_LOCKED "$1 $2.$DIFFEXT"
ogIsLocked "$3" "$4" && ogRaiseError $OG_ERR_LOCKED  "$3 $4"

PART=$(ogDiskToDev "$3" "$4" 2>/dev/null )  || ogRaiseError $OG_ERR_PARTITION "$1 $2"

# Carga del configurador del engine
[ -z $OGENGINECONFIGURATE ] && source /opt/opengnsys/etc/engine.cfg

# Comprobar que es sincronizable
#file $REPODIFFFILE | grep -i -e " BTRFS Filesystem " -e " ext4 filesystem " >/dev/null || ogRaiseError $OG_ERR_DONTSYNC_IMAGE "$3 $4"
ogIsImageSync $3 "$4" diff || ogRaiseError $OG_ERR_DONTSYNC_IMAGE "$3 $4"

PROTO=${5:-"UNICAST"}

if [ "$1" == "CACHE" -o "$1" == "cache" ]; then
   echo "[10] $MSG_HELP_updateCache." | tee -a  $OGLOGFILE
   echo "     updateCache REPO" "/$2.$DIFFEXT" "$PROTO" "$6"  | tee -a  $OGLOGFILE   
   updateCache REPO "/$2.$DIFFEXT" "$PROTO" "$6"  &>> $OGLOGCOMMAND
   RETVAL=$?
   if [ "$RETVAL" != "0" ] 
        then 
        echo "[39] $MSG_SCRIPTS_TASK_END updateCache REPO $2.$DIFFEXT $5 $6 con error $RETVAL" | tee -a  $OGLOGFILE 
        # RC=15 No hay cache 
        # RC=16 no hay espacio sufiente 
        exit $RETVAL 
   fi 

   TIMEAUX1=$[SECONDS-TIME]
   echo "      $MSG_SCRIPTS_TASK_END, $MSG_SCRIPTS_TIME_PARTIAL : $[TIMEAUX1/60]m $[TIMEAUX1%60]s" | tee -a $OGLOGFILE

fi 
TIME2=$SECONDS


# Restaurar la imagen.
echo "[40] $MSG_RESTORE $PART"

# Montamos la diferencial
ogMountImage "$1" "$2" "$DIFFTYPE" &>/dev/null
#  Comprobar que la imagen diferencial se ha montado 
ogWaitMountImage "$1" "$2" "$DIFFTYPE" || ogRaiseError $OG_ERR_DONTMOUNT_IMAGE "$1 $2 $DIFFTYPE: time_out $TIMEAUX seg."

ogMount $3 $4 >/dev/null
ogLock $3 $4
# Sincronizamos la partición con la imagen.
echo  "[60] $MSG_HELP_ogSyncRestore: $1 $2 $DIFFTYPE $3 $4"  |tee -a $OGLOGFILE
ogSyncRestore "$1" "$2" "$DIFFTYPE" $3 $4

# Desmontamos la imagen
ogUnmountImage "$1" "$2" "$DIFFTYPE"
ogUnlock $3 $4

TIMEAUX2=$[SECONDS-TIME2]
echo "      $MSG_SCRIPTS_TASK_END, $MSG_SCRIPTS_TIME_PARTIAL : $[TIMEAUX2/60]m $[TIMEAUX2%60]s" | tee -a  $OGLOGFILE

# creando enlaces y restableciendo ACL (en windows)
echo "[70] $MSG_HELP_ogRestoreInfoImage" |tee -a $OGLOGFILE
ogRestoreInfoImage  "$3" "$4" &>$OGLOGCOMMAND

# Llamar al script de post-configuración del sistema operativo.
echo "[90] $MSG_HELP_configureOs."
# el || echo es para evitar que se maneje el error.
configureOs $3 $4  &>>$OGLOGCOMMAND || echo "$?" &>>$OGLOGCOMMAND


TIME=$[SECONDS-TIME1]
echo "[100] $MSG_SCRIPTS_END $MSG_SCRIPTS_TIME_TOTAL: $[TIME/60]m $[TIME%60]s" |tee -a $OGLOGFILE


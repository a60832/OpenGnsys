#!/bin/bash
#/**
#         restoreiDiffSquash
#@brief Script de ejemplo para restaurar una imagen diferencial.
#@brief (puede usarse como base para el programa de restauraci칩n de im치genes usado por OpenGNSys Admin).
#@param 1 REPO|CACHE
#@param 2 imagen
#@param 3 disco 
#@param 4 particion 
#@param 5 protocolo 
#@param 6 opciones protocolo
#@return 
#@exception OG_ERR_FORMAT  # 1 formato incorrecto.
#@exception updateCache    # 15 No hay cache 
#@exception updateCache    # 16 no hay espacio sufiente 
#@exception "Error al montar la imagen" INTERNACIONALIZAR
#@todo: Se puede dar la opcion de que mantenga los ficheros nuevos.
#@todo: Se puede dar la opcion que la trasferencia se manden los datos comprimidos.
#@version 1.0 - restauraci칩n de imagen con sincronizacion.
#@author  
#@date   2012-12-04
#*/ ##
trap "ogUnlockImage $1  /$2.$IMGEXT ; ogUnlock $3 $4; umount $DIRMOUNT; exit 1" 1 2 3 6 9 14 15

TIME1=$SECONDS
PROG="$(basename $0)"
if [ $# -lt 4 ]; then
    ogRaiseError $OG_ERR_FORMAT "$MSG_FORMAT: $PROG REPO|CACHE imagen[.sujijo] ndisco nparticion [ UNICAST|MULTICAST|TORRENT ] [opciones protocolo]"
    exit $?
fi

echo "[1] $MSG_SCRIPTS_START $0 $*" | tee -a $OGLOGSESSION $OGLOGFILE

# Procesar par치metros de entrada
DIFFEXT="diff"
DIFFFILE=$(ogGetPath "$1" "$2.$DIFFEXT") || exit $(ogRaiseError $OG_ERR_NOTFOUND "$2.$DIFFEXT"; echo $?)
PROTO=${5:-"UNICAST"}
if [ "$1" == "CACHE" -o "$1" == "cache" ]; then
   echo "[10] Realizando la actualizacion de la cache." | tee -a $OGLOGSESSION $OGLOGFILE
   echo "     updateCache REPO" "/$DIFFFILE" "$PROTO" "$6"  | tee -a $OGLOGSESSION $OGLOGFILE   
# COMENTADO PROVISIONAL para las pruebas
#   updateCache REPO "/$DIFFFILE" "$PROTO" "$6"     &>> $OGLOGCOMMAND
   RETVAL=$?
   if [ "$RETVAL" != "0" ] 
        then 
        echo "[49] Fin del updateCache REPO $2.$DIFFEXT $5 $6 con error $RETVAL" | tee -a $OGLOGSESSION $OGLOGFILE 
        # RC=15 No hay cache 
        # RC=16 no hay espacio sufiente 
        exit $RETVAL 
   fi 
fi 

TIME2=$SECONDS

PART=$(ogDiskToDev "$3" "$4" 2>/dev/null )  || exit $(ogRaiseError $OG_ERR_PARTITION "$1 $2"; echo $?)


# Restaurar la imagen.
echo "[40] Restaurar imagen en $PART"
DEST=$(ogMount "$3" "$4")
DIRMOUNT="/tmp/mount$$"
IMGINFO="$DIRMOUNT/ogimg.info"
IMGACL="$DIRMOUNT/ogimg.acl"

mkdir $DIRMOUNT
echo "     mount -t squashfs -o loop  $DIFFFILE $DIRMOUNT" | tee -a $OGLOGSESSION $OGLOGFILE
mount -t squashfs -o loop  $DIFFFILE $DIRMOUNT 1>/dev/null
# Comprobamos que la imagen se ha montado -> si no se borra la particion
[ -r "$IMGINFO" ] || echo "Error al montar la imagen"|tee -a $OGLOGSESSION $OGLOGFILE || exit 2

# Restauramos la imagen
echo "     Diferencial: copiando los datos: rsync -aHAXq --files-from=$IMGINFO $DIRMOUNT/ $DEST" | tee -a $OGLOGSESSION $OGLOGFILE
rsync -aHAXq --files-from=$IMGINFO $DIRMOUNT/ $DEST |tee -a $OGLOGSESSION $OGLOGFILE

echo "     Diferencial: creando enlaces y borrando"  | tee -a $OGLOGSESSION $OGLOGFILE
cd $DEST
rm -rf $(cat $DIRMOUNT/ogimg.rm) 

while read dest enlace orig 
do
   if [ "$enlace" == "->" ]
   then
        OPTLN='-s'
   else 
        OPTLN=''
   fi
   cd $DEST/$(dirname $dest) 
   ln $OPTLN $orig $(basename $dest) 2>/dev/null
done < $DIRMOUNT/ogimg.ln
TIMEAUX2=$[SECONDS-TIME2]
echo "     Fin Restauracion $1 $2 $3 $4 tiempo parcial : $[TIMEAUX2/60]m $[TIMEAUX2%60]s" | tee -a $OGLOGSESSION $OGLOGFILE
# Restableciendo acl 
# Me salgo de la particion para poder desmontarla
cd
ogUnmount "$3" "$4"
if [ "$(ogGetFsType "$3" "$4")" == "NTFS" ] ; then
    ntfs-3g.secaudit -se $DEST $IMGACL
    TIMEAUX3=$[SECONDS-TIMEAUX2]
    echo "   Fin acl tiempo parcial  : $[TIMEAUX3/60]m $[TIMEAUX3%60]s" | tee -a $OGLOGSESSION $OGLOGFILE
fi
umount $DIRMOUNT

TIME=$[SECONDS-TIME1]
echo "[100] Duracion de la operacion $[TIME/60]m $[TIME%60]s"


#!/usr/bin/php
<?
############################################################
######Servidor EAC  v0.0.8r5 para Advanced Deploy enViorenment###########
# Liberado bajo licencia GPL <http://www.gnu.org/licenses/gpl.html>################
############## 2008 Antonio Doblas Viso##########################
############ Universidad de Malaga (Spain)############################
###########################################################

$opt=($_SERVER['argv'][1]);
// control de los parametros de inicio
switch ($opt)
{
case ("status"):
	$pidserver=`ps aux | grep "EACserver start" | grep -v grep | awk '{print $2}'`;
	if (strlen($pidserver) > 0)
	{
	#echo $pidserver;
	echo "activo";
	}
	else
	{
	#return 0;
	exit;
	}
	break;
case ("stop"):
	$pidserver=`ps aux | grep "EACserver start" | grep -v grep | awk '{print $2}'`;
	if (strlen($pidserver) > 0)
	{
	exec("kill -9 " . $pidserver);
	echo "parado";
	}
	else
	{
	echo "parado";
	}
	break;
case ("restart"):
	exec("/var/EAC/admin/procedimientos/EACserver stop");
#	exec("/var/EAC/admin/procedimientos/EACserver start");	
#	break;
########################## case principal START ###############################
case ("start"):
	set_time_limit(0);
	if (pcntl_fork()) 
	{
		print "###########################################################\n";
		print "#####Demonio Servidor EAC  v0.0.7 para Advanced Deploy enViorenment###########\n";
		print "#### Liberado bajo licencia GPL <http://www.gnu.org/licenses/gpl.html>################\n";
		print "####### 2008 Antonio Doblas Viso##########################\n";
		print "############ Universidad de Malaga (Spain)############################\n";
		print "###########################################################\n";
	}
	else 
	{
		posix_setsid();
		#echo "consultando configuracion en /var/EAC/admin/config/parametrosBD.php";
		require("/var/EAC/admin/config/EAC.conf");
		$hostname=system(hostname);
		$conexion=mysql_connect(SQL_HOST_LOCAL, SQL_USER, SQL_PASS) or die ('no se ha podido conectar con mysql');
		mysql_select_db(DATABASE, $conexion);
		$query1="insert into equipos (hostname,ip) values ('$hostname','" . SQL_HOST ."')";
		$resultado = mysql_query($query1) ;
		$query2="delete from tareas_servidor";
		$resultado = mysql_query($query2) or die (mysql_error());
		echo "Esperando Peticiones en " . SQL_HOST . "\n";
#####Case START: inicio del bucle (cada 5 segundos) en busca de peticiones para el servidor.
		while (true)
		{
			$query="select ip, comando, parametros from tareas_servidor";
			$rs=mysql_query($query);
			if (!$rs) 
			{
				die('invalid query: ' .  mysql_error());
			}
			$numfilas=mysql_num_rows($rs);
			$pids = array();
##### Case START: de cada busqueda, procesa las solicitudes encontradas
			while ($fila = mysql_fetch_assoc($rs))
			{
				$parametros=($fila['parametros']);
				$ip=$fila['ip'];
				$comando=$fila['comando'];
				switch ($comando) 
				{
				case "SetDefaultBoot":				
				#	$SetDefaultBootChild=pcntl_fork();
				#	if (!$SetDefaultBootChild) 
				#	{	
					        ########################################## eliminamos la tarea de la tupla tareas servidor.
						$query2="delete from tareas_servidor where comando = '".$comando . "' and parametros = '" . $parametros ."' and ip = '" . $ip . "'";
						$resultado = mysql_query($query2) or die (mysql_error());						
						######################################### configuramos el fichero del pxe del tftpboot
						#sleep(1);
						########################################## preparamos las variables
						exec(REPO . "admin/procedimientos/EACpxe " . $parametros . " " . $ip ." ");					
						#$macfile="01-" . str_replace(":","-",strtolower($fila['mac']));								
						#$nombre_archivo=REPO . "tftpboot/pxelinux.cfg/" . $macfile;
						system(REPO . "admin/procedimientos/Log " . SQL_HOST . "  ' 00:00 '  ' " . $ip . " solicita un SetDefaultBoot ' ' " . $parametros . " " . $ip . " con resultado " .  $bootstatus ."'");
						#matamos el proceso hijo creado					
				#		$pidSetDefaultBootChild=posix_getpid();
				#		echo " en un proceso hijo con id " . $pidSetDefaultBootChild . " finalizado " . $bootstatus . "\n";
				#		posix_kill($pidSetDefaultBootChild, 9);				
				#	}				
				break;	
				case "SetDefaultStartpage":
					$query3="update equipos set startpage='" .$fila['parametros'] ."'  where ip='" .$fila['ip'] . "'";
					$resultado = mysql_query($query3) or die (mysql_error());
					$query2="delete from tareas_servidor where comando = '".$fila['comando'] . "' and parametros = '" . $fila['parametros'] ."' and ip = '" . $fila['ip'] . "'";
					$resultado = mysql_query($query2) or die (mysql_error());
					## mensaje log
					system(REPO . "admin/procedimientos/Log " . SQL_HOST . "  ' 00:00 '  ' " . $ip . " solicita un SetDefaultStartPage con  '  ' " . $fila['parametros'] . "  con resultado SUCCESFULL'");
				break;
				case "CreateTorrentFromImage":
					if ($fila['ip'] == SQL_HOST) 
					{
						$query2="delete from tareas_servidor where comando = '".$fila['comando'] . "' and parametros = '" . $fila['parametros'] ."' and ip = '" . $fila['ip'] . "'";
						$resultado = mysql_query($query2) or die (mysql_error());
						$pidCreateTorrent=exec("ps aux | grep " . $fila['parametros'] . " | grep -v grep | awk '{print $2}'");
						if (strlen($pidCreateTorrent) > 0)
							{
							echo "La operacion se  /usr/bin/ctorrent -t " . $fila['parametros'] . " -u http://" . SQL_HOST . ":1234/announce -s " . $fila['parametros'] . ".torrent YA SE ESTAN REALIZANDO" ; 
							}
							else
								{							
								$child=pcntl_fork();
								if (!$child) 
									{
									sleep(1);						
									echo "CreateTorrentFromImage";
									exec("ctorrent -t " . $fila['parametros'] . " -u http://" . SQL_HOST . ":1234/announce -s " . $fila['parametros'] . ".torrent ");	
									#echo "matando el proceso " . $pidchild;
									$pidchild=posix_getpid();
									## mensaje log 
									system(REPO . "admin/procedimientos/Log " . SQL_HOST . "  ' 00:00 '  '  Solicitado un CreateTorrentFromImage ' ' " . $fila['parametros'] .  " Finalziado con pidchid " . $pidchild ."'");
									posix_kill($pidchild, 9);									
									}
								}
					}							
					break;
			case "Envioucast":
				//echo "$fila['comando'] $fila['parametros'] $fila['ip']";
				if ($fila['ip'] == SQL_HOST) 
				{
					
					$query2="delete from tareas_servidor where comando = '".$fila['comando'] . "' and parametros = '" . $fila['parametros'] ."' and ip = '" . $fila['ip'] . "'";
					$resultado = mysql_query($query2) or die (mysql_error());
				}		
				break;
			case "Enviomcast":
				//echo "$fila['comando'] $fila['parametros'] $fila['mac']";				
				if ($fila['ip'] == SQL_HOST) 
				{
					$query2="delete from tareas_servidor where comando = '".$fila['comando'] . "' and parametros = '" . $fila['parametros'] ."' and ip = '" . $fila['ip'] . "'";
					$resultado = mysql_query($query2) or die (mysql_error());					
					$pidEnviomcast=exec("ps aux | grep -F \" udp-sender --file " . $fila['parametros'] . " \" | grep -v grep | awk '{print $2}'");
#$pidEnviomcast=exec("ps aux | grep " . $fila['parametros'] . " | grep -v grep | awk '{print $2}'");
					if (strlen($pidEnviomcast) > 0)
						{
						# la operacion se esta realizando
						echo " " ; 
						}
						else
							{					
							$childdirectmcast=pcntl_fork();
							if (!$childmcast) 
								{
								sleep(1);
								#echo "operacion enviomcast" ; 
								system("/usr/sbin/udp-sender  --file " . $fila['parametros'] . " --" . McastMethod . " --fec " . McastControlError . " --max-bitrate " . McastMaxBitrate . " --ttl 1 --min-clients " . McastNumberClients . " --max-wait " . McastTimeWaitForAllClients . "");
	#system("udp-sender --file " . $fila['parametros'] . " --full-duplex --portbase 9999 --min-clients 35 --max-wait 23 --nokbd"); 
								#system("udp-sender --file " . $fila['parametros'] . " --full-duplex  --min-clients 35 --max-wait 3 --nokbd"); 
								#system("udp-sender  --file " . $fila['parametros'] . " --full-duplex --portbase 9999 --min-clients 35 --max-wait 60 > /dev/tty8");	
								#system("/usr/bin/udp-sender  --file " . $fila['parametros'] . "  --min-clients 35 --max-wait 60");	
								$pidchilddirectmcast=posix_getpid();
								echo "matando el proceso " . $pidchilddirectmcast;
								posix_kill($pidchildirectmcast, 9);						
								}
							}
				}		
				break;
			case "Enviotorrent":	
				if ($fila['ip'] == SQL_HOST) 
				{
					#echo(" ctorrent " . $fila['parametros'] . "-d");
					$query2="delete from tareas_servidor where comando = '".$fila['comando'] . "' and parametros = '" . $fila['parametros'] ."' and ip = '" . $fila['ip'] . "'";
					$resultado = mysql_query($query2) or die (mysql_error());
					$pidEnviotorrent=exec("ps aux | grep -F \" ctorrent " . $fila['parametros'] . " \" | grep -v grep | awk '{print $2}'");
					if (strlen($pidEnviotorrent) > 0)
						{
						echo "La imagen ya se esta sirviendo por torrent" ; 
						}
						else
							{					
							$childEnviotorrent=pcntl_fork();
							if (!$childEnviotorrent) 
								{
								sleep(1);
								#portctcs=":2780"
								#echo  $REPO$2$3 -s $nuevocamino -b ${camino}.bf -e 0 -S $1$portctcs
								#ctorrent $REPO$2$3 -s $nuevocamino -b ${camino}.bf -e 0 -S $1$portctcs
								echo("ctorrent " . $fila['parametros'] . " -S " . SQL_HOST . ":2780  -d " );
								#system("ctorrent " . $fila['parametros'] . " -S " . SQL_HOST . ":2780  -d " );							
								system("ctorrent " . $fila['parametros'] . " -d " );							
								$pidchildenviotorrent=posix_getpid();
								## mensaje log 
								system(REPO . "admin/procedimientos/Log " . SQL_HOST . "  ' 00:00 '  '  Solicitado un EnvioTorrent ' ' " . $fila['parametros'] .  " Finalziado con pidchid " . $pidchildenviotorrent ."'");
								#echo "matando el proceso " . $pidchilddirectmcast;
								#posix_kill($pidchildenviotorrent, 9);						
								}
							}
				}	
				break;
			case "Envio":
				system("nc " . $fila['ip'] ." 2000 < " . $fila['parametros']);  //& export id_proceso=$!");
				$query2="delete from tareas_servidor where comando = '".$fila['comando'] . "' and parametros = '" . $fila['parametros'] ."' and ip = '" . $fila['ip'] . "'";
				$resultado = mysql_query($query2) or die (mysql_error());
				break;	
			case "Directmcast":
				//echo "$fila['comando'] $fila['parametros'] $fila['mac']";
				if ($fila['ip'] == SQL_HOST) 
				{
					$query2="delete from tareas_servidor where comando = '".$fila['comando'] . "' and parametros = '" . $fila['parametros'] ."' and ip = '" . $fila['ip'] . "'";
					$resultado = mysql_query($query2) or die (mysql_error());
					$pidDirectmcast=exec("ps aux | grep -F \" udp-sender --file " . $fila['parametros'] . " \" | grep -v grep | awk '{print $2}'");
					#echo(strlen($pidDirectmcast));
					if (strlen($pidDirectmcast) > 0)
						{
						echo " ";
						#echo("La operacion Directmcast se   SE ESTAN REALIZANDO " . strlen($pidDirectmcast)); 
						}
						else
							{							
							$child=pcntl_fork();
							if (!$child) 
								{
								sleep(1);
								#system("(echo  ud-sender)"); 
								#printf("Direct mcast udp-sender  --file " . $fila['parametros'] . " --mcast-addr ". McastAddress ." --" . McastMethod . " --fec " . McastControlError . " --max-bitrate " . McastMaxBitrate . " --ttl 1 --min-clients " . McastNumberClients . " --max-wait " . McastTimeWaitForAllClients . "");
								system("udp-sender  --file " . $fila['parametros'] . " --" . McastMethod . " --fec " . McastControlError . " --max-bitrate " . McastMaxBitrate . " --ttl 1 --min-clients " . McastNumberClients . " --max-wait " . McastTimeWaitForAllClients . "");
								$pidchild=posix_getpid();
								## mensaje log 
								system(REPO . "admin/procedimientos/Log " . SQL_HOST . "  ' 00:00 '  '  Realizado un Directmcast ' ' " . $fila['parametros'] .  " Finalziado con pidchid " . $pidchild ."'");
								#echo "matando el proceso " . $pidchild;
								posix_kill($pidchild, 9);						
								}
							}
				}							
				break;
						
			default:
				echo("eliminando peticion no permitida. " );
				echo("eliminando peticion no permitida. "  . $fila['comando'] . $fila['parametros'] . $fila['ip'] . "");
				$query2="delete from tareas_servidor where comando = '".$fila['comando'] . "' and parametros = '" . $fila['parametros'] ."' and ip = '" . $fila['ip'] . "'";
				$resultado = mysql_query($query2) or die (mysql_error());
				break;
				}  //final del switch ($fila['comando']) 
			} //while comanod
		
		sleep(5);
		}    //while (true)
	exit();
	} //while else pcnt_fork
	break;
default:
	echo "usage: start, stop, status"; 
	break;
}  // case opciones parametros		
?>


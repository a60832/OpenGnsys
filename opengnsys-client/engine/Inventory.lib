#!/bin/bash
#/**
#@file    Inventory.lib
#@brief   Librería o clase Inventory
#@class   Inventory
#@brief   Funciones para recogida de datos de inventario de hardware y software de los clientes.
#@version 0.9
#@warning License: GNU GPLv3+
#*/


#/**
#         ogGetOsVersion int_ndisk int_npartition
#@brief   Devuelve la versión del sistema operativo instalado en un sistema de archivos.
#@arg  \c ndisk      nº de orden del disco
#@arg  \c npartition nº de orden de la partición
#@return  TipoSistema:Versión
#@note    TipoSistema = { Linux, Windows }
#@note    Requisitos: awk, head, chroot
#@exception OG_ERR_FORMAT    Formato incorrecto.
#@exception OG_ERR_NOTFOUND  Disco o partición no corresponden con un dispositiv
#@exception OG_ERR_PARTITION Fallo al montar el sistema de archivos.
#@version 0.1 - Primeras pruebas con OpenGNSys
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009-09-15
#*/
function ogGetOsVersion () {

# Variables locales.
local MNTDIR TYPE VERSION FILE

#/// Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then 
    ogHelp "$FUNCNAME" "$FUNCNAME"
    return
fi
#/// Error si no se reciben 2 parametros.
[ $# = 2 ] || ogRaiseError $OG_ERR_FORMAT || return $?

# Montar la particion, si no lo estaba previamente.
MNTDIR=$(ogMount $1 $2) || return $?

#/// Elección del tipo de sistema operativo.
case "$(ogGetFsType $1 $2)" in
    EXT[234] | REISERFS | REISER4)
	TYPE="Linux"
	#/// Para Linux: leer descripción.
	VERSION=$(chroot $MNTDIR lsb_release -d 2>/dev/null| awk -F: '{gsub (/\t/,""); print $2}')
	#/// Si no se puede obtener, buscar en ficheros del sistema.
	if [ -z "$VERSION" ]; then
 	    FILE="$MNTDIR/etc/lsb-release"
 	    [ -r $FILE ] && VERSION="$(awk 'BEGIN {FS="="}; $1~/DESCRIPTION/ {gsub(/\"/,"",$2); print $2}' $FILE)"
	    FILE="$MNTDIR/etc/redhat-release"
	    [ -r $FILE ] && VERSION="$(head -1 $FILE)" 
	    FILE="$MNTDIR/etc/SuSE-release"
	    [ -r $FILE ] && VERSION="$(head -1 $FILE)" 
	fi
	[ -e $MNTDIR/lib64 ] && VERSION="$VERSION 64 bits"
	;;
    NTFS | HTNFS | FAT32 | HFAT32)
	TYPE="Windows"
	#/// Para Windows: leer la version del registro.
	VERSION=$(ogGetRegistryKey $MNTDIR software '\Microsoft\Windows NT\CurrentVersion\ProductName')
	;;
esac

#/// Mostrar resultado y salir sin errores.
[ -n "$VERSION" ] && echo "$TYPE:$VERSION"
return 0
}


#/**
#         ogListHardwareInfo
#@brief   Lista el inventario de hardware de la máquina cliente.
#@return  TipoDispositivo:Modelo    (por determinar)
#@warning Se ignoran los parámetros de entrada.
#@note    TipoDispositivo = { ata, bio, boa, cdr, cpu, dis, fir, mem, mod, mul, net, ser, vga }
#@note    Requisitos: lshw, awk
#@version 0.1 - Primeras pruebas con OpenGNSys
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009-07-28
#*/
function ogListHardwareInfo () {

#/// Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then 
    ogHelp "$FUNCNAME" "$FUNCNAME"
    return
fi

#/// Recopilación de disposibivos procesando la salida de \c lshw
ogEcho info "$MSG_HARDWAREINVENTORY}"
lshw | awk 'BEGIN {type="mod";}
	/product:/ {sub(/ *product: */,"");  prod=$0;}
	/vendor:/  {sub(/ *vendor: */,"");   vend=$0;}
	/version:/ {sub(/ *version: */,"v.");vers=$0;}
	/size:/    {sub(/ *size: */,"");     size=$0;}
	/\*-/	   {if (type=="mem")
			print type"="size;
		    else
			if (type!="" && prod!="")
			    print type"="vend,prod,size,vers;
		    type=prod=vend=vers=size="";}
	/-core/    {type="boa";}
	/-firmware/ {type="bio";}
	/-cpu/     {type="cpu";}
	/-memory/  {type="mem";}
	/-ide/     {type="ide";}
	/-disk/    {type="dis";}
	/-cdrom/   {type="cdr";}
	/-display/ {type="vga";}
	/-network/ {type="net";}
	/-multimedia/ {type="mul";}
	/-usb/     {type="usb";}
	/-firewire/ {type="fir";}
	/-serial/  {type="bus";}
	END 	   {if (type!="" && prod!="")
			print type"="vend,prod,size,vers;}
      '
# */ (necesario para Doxygen)
}



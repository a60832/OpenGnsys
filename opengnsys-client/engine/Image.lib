#!/bin/bash
#/**
#@file    Image.lib
#@brief   Librería o clase Image
#@class   Image
#@brief   Funciones para creación, restauración y clonación de imágenes de sistemas.
#@version 0.9
#@warning License: GNU GPLv3+
#*/


#/**
#         ogCreateImage ndisk npartition dir image
#@brief   Crea una imagen a partir de una partición.
#@arg  \c int_ndisk      nº de orden del disco
#@arg  \c int_npartition nº de orden de la partición
#@arg  \c path_dir       directorio o grupo donde guardar la imagen
#@arg  \c str_image      nombre de la imagen
#@return  (nada, por determinar)
#@exception OG_ERR_FORMAT   formato incorrecto.
#@exception OG_ERR_NOTFOUND disco o particion no detectado (no es un dispositivo).
#@exception OG_ERR_LOCKED   particion bloqueada por otra operación.
#@exception OG_ERR_IMAGE    error al crear la imagen del sistema.
#@warning En pruebas iniciales
#@todo    Comprobaciones, control de errores, definir parámetros, caché/repositorio, etc.
#@version 0.1 - Primera versión muy en pruebas para OpenGNSys
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009/09/10
#*/
function ogCreateImage () {

# Variables locales
local PART IMGDIR IMGFILE SIZE REDSIZE

#/// Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME int_ndisk int_npart path_dir str_image" \
           "$FUNCNAME 1 1 aula1 winxp"
    return
fi
#/// Error si no se reciben menos de 2 parámetros.
[ $# -lt 4 ] && ogRaiseError $OG_ERR_FORMAT && return $?

PART="$(ogDiskToDev $1 $2)" || return $?

ogIsLocked $1 $2 && return $?
ogUnmount $1 $2 2>/dev/null || return $?

IMGDIR="$OGIMG/$3"
#### Comprobar directorio en NFS o en caché.
mkdir -p "$IMGDIR"
IMGFILE="$IMGDIR/$4"

ogLock $1 $2 && return $?
#trap "ogUnlock $1 $2; rm -f $IMGFILE" 1 2 3 6 9

SIZE=$(ogGetPartitionSize $1 $2)
#REDSIZE=$(ogReduzeFs $1 $2) || REDSIZE=$[SIZE+1]
#[ $REDSIZE -lt $SIZE ] && ogSetPartitionSize $1 $2 $REDSIZE

TYPE="$(ogGetFsType $1 $2)"
case "$TYPE" in
    EXT[234]|REISERFS)
        partimage -M -f3 -o -d -B gui=no -c -z1 save $PART "$IMGFILE" && ogRaiseError $OG_ERR_IMAGE "$1,$2,$IMGFILE" && return $?
        ;;
    NTFS|HNTFS)
        partimage -M -f3 -o -d -B gui=no -c -z1 save $PART "$IMGFILE" && ogRaiseError $OG_ERR_IMAGE "$1,$2,$IMGFILE" && return $?
        ;;
    FAT16|FAT32|HFAT16|HFAT32)
        partimage -M -f3 -o -d -B gui=no -c -z1 save $PART "$IMGFILE" && ogRaiseError $OG_ERR_IMAGE "$1,$2,$IMGFILE" && return $?
        ;;
    *)  ogRaiseError $OG_ERR_FORMAT 
        return $? ;;
esac

#[ $REDSIZE -lt $SIZE ] && ogSetPartitionSize $1 $2 $SIZE

ogUnlock $1 $2
}


#/**
#         ogGetImageSize dir image
#@brief   Devuelve el tamaño del sistema de archivos almacenado en un fichero de imagen.
#@arg  \c path_dir       directorio o grupo donde guardar la imagen
#@arg  \c str_image      nombre de la imagen
#@return  tamaño (en KB)
#@exception OG_ERR_FORMAT   formato incorrecto.
#@exception OG_ERR_NOTFOUND fichero de imagen no encontrado.
#*/
#@warning En pruebas iniciales
#@todo    Definición de parámetros y salidas.
#@version 0.1 - Primera versión muy en pruebas para OpenGNSys
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009/09/11
#*/
function ogGetImageSize () {

# Variables locales
local IMGFILE

#/// Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME path_dir str_image int_ndisk int_npart" \
           "$FUNCNAME aula1 winxp  ==>  5642158"
    return
fi
#/// Error si no se reciben menos de 2 parámetros.
[ $# -lt 2 ] && ogRaiseError $OG_ERR_FORMAT && return $?
#/// Error si el fichero de imagen no es accesible.
IMGFILE="$OGIMG/$3/$4"
[ -r "$IMGFILE" ] || ogRaiseError OG_ERR_NOTFOUND "$IMGFILE" || return $?

#/// Devuelve el tamaño de la imagen en KB.
partimage -B gui=no imginfo "$IMGFILE" 2>&1 | \
        awk '/Partition size/ {sub(/\.\.+/," "); printf "%d\n",$3*1024*1024;}'
}


#/**
#         ogRestoreImage dir image ndisk npartition
#@brief   Restaura una imagen de sistema de archivos en una partición.
#@arg  \c path_dir       directorio o grupo donde guardar la imagen
#@arg  \c str_image      nombre de la imagen
#@arg  \c int_ndisk      nº de orden del disco
#@arg  \c int_npartition nº de orden de la partición
#@return  (por determinar)
#@exception OG_ERR_FORMAT   formato incorrecto.
#@exception OG_ERR_NOTFOUND fichero de imagen o partición no detectados.
#@exception OG_ERR_LOCKED   partición bloqueada por otra operación.
#@exception OG_ERR_IMAGE    error al restaurar la imagen del sistema.
#@warning En pruebas iniciales
#@todo    Comprobaciones, control de errores, definir parámetros, caché/repositorio, etc.
#@version 0.1 - Primera versión muy en pruebas para OpenGNSys
#@author  Ramon Gomez, ETSII Universidad de Sevilla
#@date    2009/09/10
#*/
function ogRestoreImage () {

# Variables locales
local PART IMGFILE

#/// Si se solicita, mostrar ayuda.
if [ "$*" == "help" ]; then
    ogHelp "$FUNCNAME" "$FUNCNAME path_dir str_image int_ndisk int_npart" \
           "$FUNCNAME aula1 winxp 1 1"
    return
fi
#/// Error si no se reciben menos de 2 parámetros.
[ $# -lt 4 ] && ogRaiseError $OG_ERR_FORMAT && return $?

PART="$(ogDiskToDev $3 $4)" || return $?
IMGFILE="$OGIMG/$1/$2"
[ -r "$IMGFILE" ] || ogRaiseError OG_ERR_NOTFOUND "$IMGFILE" || return $?
# Error si la imagen no cabe en la particion.
[ $(ogGetImageSize "$1") -gt $(ogGetPartitionSize $3 $4) ] && ogRaiseError $OG_ERR_PARTITION && return $?


ogIsLocked $3 $4 && return $?
ogUnmount $3 $4 || return $?
ogLock $3 $4 && return $?
trap "ogUnlock $3 $4" 1 2 3 6 9

TYPE="$(ogGetFsType $3 $4)"
case "$TYPE" in
    EXT[234]|REISERFS)
        partimage -M -f3 -o -d -B gui=no -c -z1 --volume=0 restore $PART "$IMGFILE" && ogRaiseError $OG_ERR_IMAGE "$IMGFILE,$3,$4" && return $?
        ;;
    NTFS|HNTFS)
        partimage -M -f3 -o -d -B gui=no -c -z1 --volume=0 restore $PART "$IMGFILE" && ogRaiseError $OG_ERR_IMAGE "$IMGFILE,$3,$4" && return $?
        ;;
    FAT16|FAT32|HFAT16|HFAT32)
        partimage -M -f3 -o -d -B gui=no -c -z1 --volume=0 restore $PART "$IMGFILE" && ogRaiseError $OG_ERR_IMAGE "$IMGFILE,$3,$4" && return $?
        ;;
    *)  ogRaiseError $OG_ERR_FORMAT 
        return $? ;;
esac

#ogExtendFs $3 $4
ogUnlock $3 $4
}


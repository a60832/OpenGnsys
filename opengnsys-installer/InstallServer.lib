#!/bin/bash
#/**
#@file    InstallServer.lib
#@brief   Librería o clase Install
#@class   Install
#@brief   Funciones de instalación y configuración de OpenGNSys
#@version 0.9
#@warning License: GNU GPLv3+
#*/



#/**
#         ogBuildServer
#@brief   Instala el software requerido por opengnsys
#@note
#@warning Queda comprobarlo para opengnesys).
#@version 0.1 Date    Date: 03/06/2009  author  Antonio Doblas, EVLT Universidad de Malaga
#@note	 version inicial proporcionada por EAC - No testeado para OpenGNSys.
#*/
function ogBuildServer () {
	## variables
	package=/opt/opengnsys
	dbsql=/var/EAC/admin/config/database/bdeac.sql
	#preparcion contendor tftpboot
	apt-get install syslinux
	mkdir -p ${package}/tftpboot
	mkdir -p ${package}/tftpboot/pxelinux.cfg
	touch ${package}/tftpboot/pxelinux.cfg/default
	cp -rav /usr/lib/syslinux ${package}/tftpboot/syslinux
	cp ${package}/tftpboot/syslinux/pxelinux.0 ${package}/tftpboot/
	cd /var/lib/
	tar czvf `date +'%F'`-tftpboot.tgz tftpboot
	cd /
	rm -fr /var/lib/tftpboot
	ln -s  ${package}/tftpboot/ /var/lib/tftpboot
	# instalamos el servidor tftpd, un cliente tftp y el superdemonio inetd
	apt-get install tftpd-hpa tftp-hpa openbsd-inetd update-inetd
	/etc/init.d/openbsd-inetd start
	sleep 1
	TestPxe
	# instalar lamp
	/etc/init.d/lighttpd stop
	update-rc.d -f lighttpd remove
	apt-get install apache2 mysql-server mysql-client libmysqlclient15-dev php5 php5-mysql php5-cli phpmyadmin clusterssh
	update-rc.d apache2 defaults
	/etc/init.d/apache2 start
	### descargamos la web
	### importamos la base de datos
	mysqldump eac > /var/EAC/admin/config/database/eacbdbackup`date +'%F'`
	mysql -p <<<"DROP DATABASE IF EXISTS eac"
	mysql -p <<<"CREATE DATABASE IF NOT EXISTS eac"
	mysql -p eac < $dbsql
	mysql -p <<<"GRANT ALL PRIVILEGES ON eac.* TO 'eac'@'%' IDENTIFIED BY 'eac'"
	mysql -p <<<"GRANT ALL PRIVILEGES ON eac.* TO 'eac'@'localhost'IDENTIFIED BY 'eac'"
	echo " comprobar de mysql /etc/mysql/my.cnf"
	echo "[mysqld]"
	echo "bin-address = 0.0.0.0 "
	echo "skip-name-resolve"
	/etc/init.d/mysql restart
	### dhcp
	apt-get install dhcp3-server
	/etc/init.d/dhcp3-server stop
	# otros
	#doxygen doxygen-doc doxygen-gui graphviz sun-java6-jre gimp netpbm mysql workbenc mysql-gui-tools-5.0 bittorrent syslinux
}

#/**
#         ogCustomServer
#@brief   Configura los servicios del opengnsys Server para un quipo que no esté en producción. el dhcp lo deja configurado pero desabilitado
#@arg  \c str_IP         IP del servidor Opengnsys
#@arg  \c str netmask    netmask del servidor OpenGnsys
#@arg  \c str gateway    ip del gateway para el servidor
#@arg  \c str subnet     subred del servidor Opengnsys
#@arg  \c str broadcast  direccion broadcast de la red
#@arg  \c str dns        direccion del servidor dns
#@arg  \c str hostname   hostname del servidor Opengnsys
#@note    Requisitos: SO en el contendor tftpboot
#@warning Queda comprobarlo para opengnesys).
#@version 0.1 - version inicial proporcionada por EAC - No testeado para OpenGNSys.
#@author  Antonio Doblas, EVLT Universidad de Malaga
#@date    2009/07/25
#*/

function ogCustomServer() {

if [ $# = 0 ]
then
	echo "configurador del servicio tftpboot, dhcpd y nfs para el entrono opengnsy"
	echo "admite como parametro:        str_IP          str_netmask   str_gateway     str_subnet  str_broadcast    str_dns       str_hostname"
	echo "ejemplo: EAC_conf_server.sh   172.16.72.242 255.255.255.0   172.16.72.254   172.16.72.0   172.16.72.255  150.214.40.11 EACadi"
fi
if [ $# = 7 ]
then
	export iphost=$1
	export ipmask=$2
	export ipgateway=$3
	export ipsubnet=$4
	export ipbroadcast=$5
	ipdns=$6
	name=$7
	ip3octetos=`echo $1 | awk -F. '{print $1 "." $2 "." $3}'`

	echo "configurando la interfaz de rez para $iphost con netmask $ipmask y hostname $name"

cat > /etc/network/interfaces <<EOF
auto lo
iface lo inet loopback
auto eth0
iface eth0 inet static
address $iphost
netmask $ipmask
gateway $ipgateway
EOF

	/etc/init.d/networking restart

	echo "configurando /etc/hosts.allow para $ipsubred"
cat > /etc/hosts.allow <<EOF
all:$ipsubred/$ipmask
EOF

	echo "configurando /etc/hosts "
cat > /etc/hosts <<EOF
127.0.0.1		localhost
$iphost		$name
EOF

	echo "configurando /etc/hostname "
cat > /etc/hostname <<EOF
$name
EOF
	/etc/init.d/hostname.sh start

echo "configurando el servidor dns"
cat > /etc/resolv.conf <<EOF
nameserver $ipdns
EOF

	echo "configurando el servidor dhcp"
cat > /etc/dhcp3/dhcpd.conf <<EOF
option routers                  $ipgateway;
option broadcast-address        $ipbroadcast;
option subnet-mask              $ipmask;
option domain-name-servers      $ipdns;
ddns-update-style none;
not-autoritative;
subnet $ipsubnet netmask $ipmask  {
#range ${ip3octetos}.20 ${ip3octetos}.30;
next-server ${iphost};
filename "pxelinux.0";
host example1 {
        hardware ethernet 00:13:77:66:4e:60;
        fixed-address $ip3octetos.152;
        }
host example2 {
	hardware ethernet 00:13:8f:cf:64:73;
	fixed-address $ip3octetos.153;
}
}
EOF

	# /etc/init.d/dhcp3-server restart

	echo "configurando el servidor nfs"
cat > /etc/exports <<EOF
/opt/opengnsys/client ${ipsubnet}/${ipmask}(ro,no_subtree_check,no_root_squash,async)
/opt/opengnsys/log/client ${ipsubnet}/${ipmask}(ro,no_subtree_check,no_root_squash,sync)
/opt/opengnsys/images ${ipsubnet}/${ipmask}(rw,no_subtree_check,no_root_squash,sync,crossmnt)
/opt/opengnsys/tftpboot/ogClients/ogClientNfs ${ipsubnet}/${ipmask}(ro,no_subtree_check,no_root_squash,sync)
EOF
	/etc/init.d/nfs-kernel-server restart


	echo "configuramos el fichero default del pxelinux.cfg"
cd /opt/opengnsys/tftpboot
#buscamos los kernel y los initrd del contenedor tftpboot
vmlinuznfs=`find -type f -name vmlinuz* | grep "ogClientNfs"`
initrdnfs=`find -type f -name initrd* | grep "ogClientNfs"`
vmlinuzUltraLight=`find -type f -name vmlinuz* | grep "ogClientUltraLight"`
initrdUltraLight=`find -type f -name initrd* | grep "ogClientUltraLight"`

vmlinuzRam=`find -type f -name vmlinuz* | grep "ogClientRam"`
initrdRam=`find -type f -name initrd* | grep "ogClientRam"`

cat > /var/EAC/tftpboot/pxelinux.cfg/default <<EOF
DEFAULT ogClientUltraLight

LABEL ogClientUltraLight
KERNEL ${vmlinuzUltraLight}
APPEND initrd=${initrdUltraLight} ip=dhcp ro vga=788 irqpoll acpi=on


LABEL ogClientsNfs
#KERNEL EACBootAgent/stable/vmlinuz-2.6.28-11-server
KERNEL ${vmlinuznfs}
#APPEND root=/dev/nfs initrd=EACBootAgent/stable/initrd.img-2.6.28-11-server nfsroot=${iphost}:/var/EAC/nfsroot/stable ip=dhcp ro vga=788 irqpoll nolapic allowed_drive_mask=0 acpi=off pci=nomsi EACregistred=NO
APPEND root=/dev/nfs initrd=${initrdnfs} nfsroot=${iphost}:/opt/opengnsys/tftpboot/ogClientNfs ip=dhcp ro vga=788 irqpoll nolapic  acpi=off pci=nomsi EACregistred=NO


LABEL ogClientRam
KERNEL ${vmlinuzRam}
APPEND initrd=${initrdRam} ip=dhcp ro vga=788 irqpoll acpi=on


label dos
  kernel floppies/memdisk
  append initrd=/floppies/dos.img

LABEL 1
LOCALBOOT 0

LABEL 11
kernel syslinux/chain.c32
append hd0 1


LABEL 12
kernel syslinux/chain.c32
append hd0 2

LABEL 13
kernel syslinux/chain.c32
append hd0 3

LABEL 2
kernel syslinux/chain.c32
append hd1 0


LABEL mbr
	LOCALBOOT 0

PROMPT 1
TIMEOUT 18
EOF

#reiniciamos otros servicios
/etc/init.d/mysql restart
/etc/init.d/apache2 restart
fi

}



#/**
#         ogInterfazCustomServer
#@brief   Interfaz para ogCustomServer y openGnsys.conf
#@note    Requisitos: SO en el contendor tftpboot
#@warning Queda comprobarlo para opengnesys).
#@version 0.1 - version inicial proporcionada por EAC - No testeado para OpenGNSys.
#@author  Antonio Doblas, EVLT Universidad de Malaga
#@date    2009/07/25
#*/
function ogInterfazCustomServer() {
source /opt/opengnsys/client/engine/System.lib
source /opt/opengnsys/client/engine/PostConf.lib

	fileconf=/opt/opengnsys/etc/openGnsys.conf
	filetempconf=/tmp/openGnsys.conf
	DIALOG=whiptail # dialog  whiptail
	TMP="/tmp/output"
########### mensaje de bienvenida ############################
	$DIALOG \
	--title "openGnsys" \
	--msgbox "Opengnsys \n
	Asistente de Instalacion y configuracion v 0.9    \n \
	\n \
	Descripcion opengnsys: \n \
	************ particionado, \n \
	************ clonacion y restauracion de SO (linux, windows) \n \
	************ Postconfiguracion de los SO restaurados \n \
	************ Gestor de arranque remoto \n \
\n
\n	\

 " 30 80


#################### configuracion de la red en offline ######################
		export result=$(dialog --title "Configuracion manual de la red" \
		--form "Desplaza y modifica con los cursores. \n NO PULSAR ENTER hasta rellenar todos los campos" 30 30 20 \
				"IP:" 			1 1 "172.16.72.242" 1 10 	30 30  \
				"Netmask:" 	2 1 "255.255.255.0" 2 10 	30 30  \
				"Gateway"	3 1 "172.16.72.254" 3 10	30 30 \
				"Subred"		4 1 "172.16.72.0"    4  10        30  30 \
				"Broadcast" 	5 1  "172.16.72.255"  5 10	30 30 \
				"DNS"		6 1 "62.36.225.150" 6 10	30 30 \
				"Hostname" 	7 1 "EACadi" 		7 10 	30 30  \
			--stdout)
			#llamada a CustomEACServer
			CustomEACServer $result
			export iphost=`echo $result | grep -f1 -d' '`
			echo $iphost
			#export dnshost=`echo $result | grep -f6 -d' '`
			#echo "nameserver $dnshost > /var/EAC/nfsroot/etc/resolv.con"

	$DIALOG \
		--title "Entorno Avanzado de Clonacion - Advanced Deploy enViorenmet " \
		--msgbox "En los siguientes pasos configuraremos el EAC \n
				el fichero es /var/EAC/admin/config/EAC.conf \n
				Si te equivocas puedes solucionarlo ejecutando como root \m
				# source /var/EAC/admin/librerias/EACInstall \n
				# InterfazCustomEACserver" 20 60
cat > $filetempconf << EOF
<?php
##########################################################
#### Configuracion opengnsys############################
##########################################################
EOF

	$DIALOG  --nocancel \
		--title "opengnsys" \
		--inputbox "SQL_HOST o Direccion IP de este servidor \
				introduce"  20 60 "172.16.72.242" \
	2>$TMP
	export sql_host=`cat $TMP`

	cat >> $filetempconf <<EOF
######## Parametros de la base de datos ######################
define ("SQL_HOST", "\$sql_host");
define("SQL_HOST_LOCAL", "localhost");
define ("SQL_USER", "opengnsys");
define ("SQL_PASS", "opengnsys");
define ("DATABASE", "opengnsys");
######## Parametros almacenaje ######################
define ("REPO", "/opt/opengnsys/");
EOF

$DIALOG  --nocancel  \
		--title "opengnsys " \
		--inputbox "NAMECOMPANY o nombre del usuario o empresa"  20 60 "Antonio Jesus Doblas Viso" \
		2>$TMP
	export namecompany=`cat $TMP`
	cat >> $filetempconf <<EOF
define ("NAMECOMPANY", "\$namecompany");
EOF

$DIALOG  --nocancel  \
		--title "opengnsys " \
		--inputbox "Servidor DNS para tus clientes \
				introduce"  20 60 "62.36.225.150" \
		2>$TMP
	export clientdns=`cat $TMP`
	echo "nameserver $clientdns" > /opt/opengnsys/client/etc/resolv.conf

$DIALOG  --nocancel  \
		--title "opengnsys " \
		--inputbox "servidor proxy para tus clinetes , no pongas http://\
				introduce"  20 60 "172.16.72.242:3128" \
		2>$TMP
	export clientproxy=`cat $TMP`
	cat >> $filetempconf <<EOF
define ("ClientProxy", "http://\$clientproxy");
EOF

$DIALOG  --nocancel  \
		--title "opengnsys " \
		--inputbox "servidor ntp o de hora para tus clinetes \
				introduce"  20 60 "hora.alumnos.universidad.es" \
		2>$TMP
	export clientntp=`cat $TMP`
	cat >> $filetempconf <<EOF
define ("ClientNtp", "\$clientntp");
EOF



	$DIALOG  --nocancel  \
		--title "opengnsys " \
		--inputbox "McastAddress o Direccion multicast de tu red \
				introduce"  20 60 "239.172.16.72" \
		2>$TMP
	export mcastaddress=`cat $TMP`
	cat >> $filetempconf <<EOF
define ("McastAddress", "\$mcastaddress");
EOF

	$DIALOG  --nocancel  \
		--title "opengnsys " \
		--menu "McastMethod \n Metodo de transferencia multicast"  20 60 11 \
				full-duplex  "" \
				half-duplex ""\
				broadcast ""\
		2>$TMP
	export mcastmethod=`cat $TMP`
	cat >> $filetempconf <<EOF
define ("McastMethod", "\$mcastmethod");   // full-duplex, half-duplex  or broadcast
EOF

	$DIALOG  --nocancel  \
		--title "opengnsys " \
		--menu "McastMaxBitrate \n Maxima velocidad de transferencia multicast"  20 60 11 \
				100M  "" \
				90M ""\
				80M ""\
				70M ""\
				60M ""\
				50M ""\
	2>$TMP
	export mcastmaxbitrate=`cat $TMP`
	cat >> $filetempconf <<EOF
define ("McastMaxBitrate", "\$mcastmaxbitrate");   // 70M
define ("McastControlError", "8x8/128");
EOF

	$DIALOG  --nocancel \
		--title "opengnsys " \
		--inputbox "McastNumberClients \n este parametro indica el numero \
				de equipos al los cuales el servidor de Multicast
				esperara para iniciar el envio"  20 60 "90" \
	2>$TMP
	export mcastnumberclients=`cat $TMP`
	cat >> $filetempconf <<EOF
define ("McastNumberClients", "\$mcastnumberclients");
EOF

	$DIALOG --nocancel   \
		--title "opengnsys " \
		--inputbox "McastTimeWaitForAllClients \n este parametro indica el numero \
				de segundos que el servidor esperara a que se conecten el numero\
				de equipos definidos en el parametro anterior. Transcurrido este tiempo \
				el servidor comenzara a enviar independientemete de que esten todos los equipos clientes \
				preparados para recibir "  20 60 "360" \
	2>$TMP
	export mcasttimewaitforallclients=`cat $TMP`
	cat >> $filetempconf <<EOF
define ("McastTimeWaitForAllClients", "\$mcasttimewaitforallclients");
EOF


		$DIALOG  --nocancel  \
		--title "opengnsys " \
		--menu "HostnameMethod  Metodo por el cual los clientes se autonombraran \
		en la siguiente ventana se asignara el valor de la variable Si eleges la opcion \
		file este debes de ubicarlo en /var/EAC/config/hostnamefile.txt con el formato \
		de IP;NOMBRE" 20 60 11 \
				variables "" \
				file ""\
				dns ""\
		2>$TMP
		export hostnamemethod=`cat $TMP`
cat >> $filetempconf <<EOF
######## PARAMETROS ARRANQUE #####
define ("HostnameMethod","\$hostnamemethod");   // variables, dns, file
define ("HostnameFile","config/hostnamefile.txt");
EOF


		hostnamevariables=$(dialog --title "Configuracion manual de la red" \
		--form "Desplaza y modifica con los cursores. \n NO PULSAR ENTER hasta rellenar todos los campos \
		el unico campo obligatorio es el variable ya que debe ser variable para cada cliente \
		los otros campos son opcionales los puedes dejar en blanco \
		las variables globales las puedes ver en Setting.lib algunas son IP IPcuatro IPtres \
		el formato de la variable debe ser prefijo\\\${variable}sufijo" 40 80 20 \
				"prefijo:" 		1 1 	"adi" 1 10 		30 30  \
				"variable:" 	2 1 	"\\\${IPcuatro}" 2 10 	30 30  \
				"sufijo"		3 1 	"-xp" 3 10		30 30 \
		--stdout)
		export hostnamevariables=`echo $hostnamevariables | tr -d ' '`
		cat >> $filetempconf <<EOF
define ("HostnameVariables","$hostnamevariables");
EOF

		$DIALOG  --nocancel  \
		--title "Entorno Avanzado de Clonacion - Advanced Deploy enViorenmet " \
		--menu "CloneImageNTFS  Herramienta, que por defecto utilizara el EAC cuando \
		la particion a crear sea NTFS si en un momento puntual queremos utilizar la herramienta \
		que no hayamos seleccionado simplemente debemos re exportar la variable CloneImageNTFS \
		con el valor de la herramienta" 20 60 11 \
				partimage "" \
				ntfsclone ""\
				partclone " "\
		2>$TMP
		export cloneimagentfs=`cat $TMP`
cat >> $filetempconf <<EOF
######### Configuracion herramientas de clonado #############
define ("CloneImageNTFS","\$cloneimagentfs");   // admite ntfsclone partimage  partimage-ng
EOF

		$DIALOG  --nocancel  \
		--title "opengnsys " \
		--menu "CloneImageEXT23  Herramienta, que por defecto utilizara el EAC cuando \
		la particion a crear sea EXT2-3 si en un momento puntual queremos utilizar la herramienta \
		que no hayamos seleccionado simplemente debemos re exportar la variable CloneImageEXT23 \
		con el valor de la herramienta" 20 60 11 \
				partimage "" \
				partclone " " \
		2>$TMP
		export cloneimageext23=`cat $TMP`
cat >> $filetempconf <<EOF
define ("CloneImageEXT23","\$cloneimageext23");   // admite ntfsclone partimage  partimage-ng
?>
EOF


### parseamos el fichero openGnsys.conf
CrearPatron sql_host namecompany clientdns clientproxy clientntp mcastaddress  mcastmethod mcastmaxbitrate mcastnumberclients  mcasttimewaitforallclients hostnamemethod cloneimagentfs cloneimageext23
sed -f /tmp/patron.tmp $filetempconf > $fileconf
echo "Actualizado la BD"
/usr/bin/php -r 'include("/opt/opengnsys/librerias/DBProcess.php"); InsertClassrom("Default",$_SERVER["ipsubnet"],$_SERVER["ipmask"],$_SERVER["ipbroadcast"],$_SERVER["ipgateway"],$_SERVER["sql_host"], $_SERVER["sql_host"]);'
echo "fin proceso"
## damos los permisos al usuario web
chown -R www-data:www-data /var/EAC/admin/startpage
chmod -R 777 /var/EAC/admin/startpage
$DIALOG \
		--title "fin de proceso " \
		--msgbox "Se ha configurdo el fichero /var/EAC/admin/config/EAC.conf \n
				Si te equipos, ejecuta como root: source /var/EAC/admin/librerias/EACInstall.lib \n
				y luego # InterfazCustomEACserver" 20 60



}

#/**
#         ogTestPxe
#@brief   Comprueba la transferencia del tftpboot
#@note    Requisitos: SO en el contendor tftpboot
#@warning Queda comprobarlo para opengnesys).
#@version 0.1 - version inicial proporcionada por EAC - No testeado para OpenGNSys.
#@author  Antonio Doblas, EVLT Universidad de Malaga
#@date    2009/07/25
#*/

function TestPxe () {
	cd /tmp
	tftp -v localhost -c get pxelinux.0 && echo "servidor tftp OK" || echo "servidor tftp KO"
	cd /
}